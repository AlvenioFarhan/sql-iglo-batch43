use Northwind
--Tulis query SQL untuk menemukan 2 karyawan dengan pengalaman kerja terlama dan 2 karyawan dengan selisih pengalaman kerja terbesar

select * from Employees

select FirstName, HireDate, DATEDIFF(YEAR, HireDate,GETDATE()) Pengalamankerja
from Employees
order by Pengalamankerja desc


--video (SOAL AMBIGU)
select top 2 CONCAT(FirstName, ' ', LastName) [Terlama], CONCAT(FirstName, ' ', LastName) [Selisih Terbesar] 
from Employees
order by DATEDIFF(YEAR, HireDate, GETDATE())



--Tampilkan 3 data berupa nama lengkap pegawai beserta title of courtesynya yang berusia lebih dari 20 tahun sejak hari ini--yang paling banyak melayani customer dengan range tahun 1996 hingga 1997  dan diurutkan dari yang terkecil hingga terbesar --berdasarkan total customer yang telah dilayaniselect * from Employeesselect * from Customersselect * from Ordersselect CONCAT(TitleOfCourtesy, ' ', FirstName, ' ', LastName) NamaLengkap, COUNT(ord.CustomerID) Customerfrom Employees empjoin Orders ord on emp.EmployeeID = ord.EmployeeIDwhere DATEDIFF(YEAR, BirthDate,GETDATE()) >=20 and DATENAME(YEAR, OrderDate) between 1996 and 1997group by emp.TitleOfCourtesy, emp.FirstName, emp.LastNameorder by Customer asc--videoselect top 3 CONCAT(e.TitleOfCourtesy, ' ', e.FirstName, e.LastName) NamaLengkap, COUNT(o.CustomerID) CustomerDilayanifrom Employees ejoin Orders o on e.EmployeeID = o.EmployeeIDwhere DATEDIFF(year, e.BirthDate, GETDATE()) > 20 and DATENAME(year, o.OrderDate) between 1996 and 1997group by e.TitleOfCourtesy, e.FirstName, e.LastNameorder by CustomerDilayani asc--Buatkan laporan karyawan dengan Title of Courtesy Mr yang menangani order yang dihitung berdasarkan tanggal order dibuat--dengan sumbu x adalah bulan januari hingga december pada tahun 1997 dan sumbu Y adalah Nama employee --dengan TitleofCourtesy Mr dengan total banyaknya orderan yang diproses karyawan tersebut dalam satu tahun--dan diurutkan berdasarkan jumlah order yang terbanyak diproses oleh karyawan tersebut--X januari - des--Y nama employeeselect * from Employeesselect * from Orders;with tabel as (select CONCAT(emp.TitleOfCourtesy, ' ', emp.FirstName, ' ', emp.LastName) NamaLengkap, ord.OrderIDfrom Employees empjoin Orders ord on emp.EmployeeID = ord.EmployeeIDwhere emp.TitleOfCourtesy = 'Mr.'and datename(year, ord.orderdate) = '1997'group by emp.TitleOfCourtesy ,emp.FirstName, emp.LastName)--video;with PivRes as (select * from (select CONCAT(e.FirstName, ' ', e.LastName) FullName, DATENAME(MONTH,o.OrderDate) Bulan, COUNT(*) Ordersfrom Employees ejoin Orders o on e.EmployeeID = o.EmployeeIDwhere DATENAME(YEAR, o.OrderDate) = 1997 and e.TitleOfCourtesy = 'Mr.'group by e.FirstName, e.LastName, o.OrderDate) SourcePIVOT(Count(Orders) for Bulan in ([January],[February], [March], [April], [May], [June],								[July], [August], [September], [October], [November], [December])	) as pvt)select *, ([January] +[February] +[March] +[April] +[May]+[June] +[July] +[August] +[September] +[October] +[November] +[December]) Totalfrom PivResorder by Total desc--union all--select sum(January) ,--sum(February) ,--sum(March) ,--sum(April) ,--sum(May),--sum(June) ,--sum(July) ,--sum(August) ,--sum(September) ,--sum(October) ,--sum(November) ,--sum(December)--from PivRes--Buatkan laporan untuk karyawan yang berumur lebih dari 65 tahun dan sudah bekerja selama lebih dari 30 tahun--yang berhasil menjual produk berdasarkan perusahaan pengiriman--tampilkan nama lengkap karyawan, dan nama perusahaan pengirimanselect * from Employeesselect * from Ordersselect * from Shippers;with tabel as (select CONCAT(emp.FirstName, ' ', emp.LastName) NamaLengkap, s.CompanyName, ord.OrderIDfrom Employees empjoin Orders ord on emp.EmployeeID = ord.EmployeeIDjoin Shippers s on emp.EmployeeID = s.ShipperIDwhere DATEDIFF(YEAR, BirthDate,GETDATE()) > 65 and DATEDIFF(YEAR, HireDate,GETDATE()) > 30)select *from tabelpivot(count(OrderID) for CompanyNamein ([Speedy Express], [United Package], [Federal Shipping])) as pvt--video;with tabel as (select CONCAT(FirstName, ' ', LastName) FullName, o.EmployeeID, s.CompanyNamefrom Employees ejoin Orders o on e.EmployeeID = o.EmployeeIDjoin Shippers s on s.ShipperID = o.ShipViawhere DATEDIFF(YEAR, HireDate, GETDATE()) > 30 and DATEDIFF(YEAR, BirthDate, GETDATE()) > 65)select pvt.*from tabelpivot( count(EmployeeID) for CompanyName in ([Speedy Express], [United Package], [Federal Shipping]))as pvt/* Tampilkan nama lengkap yang berasal dari tabel employees sesuai dengan format daftar pustaka. (Dimana nama belakang diposisikan pada bagian depan serta dipisahkan dengan tanda koma dan pastikan huruf awal dari setiap nama depan atau belakang harus huruf kapital)*/select * from Employeesselect CONCAT(UPPER(SUBSTRING(emp.LastName, 1, 1)),
LOWER(SUBSTRING(emp.LastName, 2, LEN(emp.LastName))), ', ',
UPPER(SUBSTRING(emp.FirstName, 1, 1)),
LOWER(SUBSTRING(emp.FirstName, 2, LEN(emp.FirstName)))
) FormatName--CONCAT(emp.LastName, ',', ' ', emp.FirstName) FormatNamefrom Employees emp/*tampilkan order id, nama produk, categori produk, unitprice, quantity, buatlah juga total unit Price, total quantity, total bayar per baris dan total bayar dari semua pembayaran yang diorder lebih dari tahun 1996 dan quantity yang diorder lebih dari sama dengan 70 buah dan status produk yang discountinue, dengan catatan total bayar menggunakan format US dollar*/select * from Productsselect * from [Order Details]select * from Ordersselect * from Categoriesselect o.OrderID, p.ProductName, cat.CategoryName, p.UnitPrice, od.Quantity, (p.UnitPrice * od.Quantity)TotalBayarfrom Products pjoin [Order Details] od on p.ProductID = od.ProductIDjoin Orders o on od.OrderID = o.OrderIDjoin Categories cat on cat.CategoryID = p.CategoryIDwhere DATEDIFF(YEAR, o.OrderDate,GETDATE()) > 1996 and od.Quantity >= 70 and p.Discontinued = 1--videoselect od.OrderID, p.ProductName, c.CategoryName, p.Discontinued, od.UnitPrice, od.Quantity, FORMAT(SUM(od.UnitPrice*od.Quantity), 'C', 'en-US') TotalBayarfrom [Order Details] odjoin Orders o on od.OrderID = o.OrderIDjoin Products p on od.ProductID = p.ProductIDjoin Categories c on p.CategoryID = c.CategoryIDwhere DATENAME(YEAR, o.OrderDate) > 1996 and od.Quantity >= 70 and p.Discontinued = 1group by od.OrderID, p.ProductName, c.CategoryName, od.UnitPrice, od.Quantity, p.Discontinuedunion allselect '','','','', sum(od.UnitPrice) TotalUnitPrice, sum(od.Quantity) TotalQuantity, FORMAT(SUM(od.UnitPrice*od.Quantity), 'C', 'en-US') TotalBayarfrom [Order Details] odjoin Orders o on od.OrderID = o.OrderIDjoin Products p on od.ProductID = p.ProductIDjoin Categories c on p.CategoryID = c.CategoryIDwhere DATENAME(YEAR, o.OrderDate) > 1996 and od.Quantity >= 70 and p.Discontinued = 1--Tampilkan employee Id, nama lengkap employee, deskripsi region, dan --dimana region nya adalah Northern dan employee teritori Id diatas 45000 --serta umur employee hingga saat ini diatas 50 tahun dimana tabel y adalah --EmployeeID dan tabel x adalah Nama Lengkap, deskripsi region, dan deskripsi teritori yang dibuat pivot--dan diurutkan berdasarkan nama lengkapselect * from Employeesselect * from Region;with tabel as (select emp.EmployeeID, CONCAT(emp.FirstName, ' ', emp.LastName) NamaLengkap, reg.RegionDescriptionfrom Employees empjoin Region reg on reg.RegionID = emp.EmployeeIDwhere DATEDIFF(YEAR, emp.BirthDate,GETDATE()) > 50 and reg.RegionDescription = 'Northern')select *from tabelPIVOT(COUNT(EmployeeID) for NamaLengkap 
in ([])
) as pvt


--video

select * from (
select e.EmployeeID, CONCAT(e.FirstName, ' ', e.LastName) NamaLengkap, t.TerritoryID, r.RegionDescription, t.TerritoryDescription
from EmployeeTerritories et
join Territories t on et.TerritoryID = t.TerritoryID
join Region r on t.RegionID = r.RegionID
join Employees e on et.EmployeeID = et.EmployeeID
where t.RegionID = 3 and et.TerritoryID >= 45000 and DATEDIFF(YEAR, BirthDate, GETDATE()) >= 50
) as tabel
PIVOT( count(TerritoryID) for TerritoryDescription in ([Findlay],[Racine],[Southfield], [Troy], [Bloomfield Hills], [Roseville], [Minneapolis])
) as pvt


--Manajemen ingin tahu produk yang terjual dengan harga diatas 50 di bulan januari tahun 1997 yang mendapatkan diskon. --Tampilkan order id, nama produk, harga produk, diskon, tanggal pengiriman, dan harga produk setelah mendapatkan diskon.--VIDEO HILANGselect * from Productsselect * from Ordersselect * from [Order Details]select o.OrderID, p.ProductName, p.UnitPrice, od.Discount, o.ShippedDate, ((p.UnitPrice*od.Quantity)-((p.UnitPrice*od.Quantity)*od.Discount)) HargaDiskonfrom Products pjoin [Order Details] od on p.ProductID = od.ProductIDjoin Orders o on o.OrderID = od.OrderIDwhere p.UnitPrice > 50 and DATENAME(YEAR, o.OrderDate) = 1997 and DATENAME(MONTH, o.OrderDate) = 'January' and od.Discount != 0group by o.OrderID--Tampilkan nama produk, nama lengkap employee dan banyak setiap produk --dari detail order yang dipertanggungjawabkan oleh Employee yang berumur kurang dari 64 tahun, --diurutkan berdasarkan nama produkselect * from Productsselect * from Employeesselect * from Ordersselect * from [Order Details]select p.ProductName, CONCAT(emp.FirstName, ' ', emp.LastName) NamaLengkap, count(distinct od.Quantity) BanyakProdukfrom Employees empjoin Orders o on emp.EmployeeID = o.EmployeeIDjoin [Order Details] od on od.OrderID = o.OrderIDjoin Products p on p.ProductID = od.ProductIDwhere DATEDIFF(YEAR, o.OrderDate, GETDATE()) < 64group by p.ProductName, emp.FirstName, emp.LastNameorder by p.ProductName--videoselect p.ProductName, CONCAT(e.FirstName, ' ', e.LastName) FullName, SUM(od.Quantity) Jumlahfrom Employees ejoin Orders o on e.EmployeeID = o.EmployeeIDjoin [Order Details] od on od.OrderID = o.OrderIDjoin Products p on od.ProductID = p.ProductIDwhere DATEDIFF(YEAR, BirthDate, GETDATE()) < 64group by p.ProductName, e.FirstName, e.LastNameorder by p.ProductName asc--Tampikan negara dan kota shipper kemudian tampilkan banyak pengiriman masing-masing kota dari tahun 1996-1999, --sumbu X merupkan tahun dan subu Y berupa negara dan kotaselect * from Shippersselect * from Ordersselect * from (
select o.ShipCountry, o.OrderID, o.ShippedDate, DATENAME(YEAR, o.ShippedDate) YearShipper
from Orders o
join Shippers s on s.ShipperID = o.ShipVia
where DATENAME(YEAR, o.ShippedDate) between 1996 and 1999
) Tabel
pivot(
count(OrderID) for YearShipper in ([1996],[1997],[1998],[1999])
) pvt

--video
select * from (
select OrderID, ShipCity, ShipCountry
from Orders
where DATENAME(YEAR, ShippedDate) between 1996 and 1999
) tabel
pivot(count(ShipCountry) for OrderId in ([1996],[1997],[1998],[1999])
) pvt




--Urutkan Jumlah orderan dari yang terbesar ke terkecil pada territory 'Edison', 'Philadelphia', 'Atlanta', 'Orlando', 'Racine' tahun 1997

select * from Orders
select * from Territories

select t.TerritoryDescription ,COUNT(o.OrderID) TotalOrderan
from Orders o
join Employees emp on emp.EmployeeID = o.EmployeeID
join EmployeeTerritories et on et.EmployeeID = emp.EmployeeID
join Territories t on t.TerritoryID = et.TerritoryID
where t.TerritoryDescription in ('Edison', 'Philadelphia', 'Atlanta', 'Orlando', 'Racine') and DATENAME(YEAR, o.OrderDate) = 1997
group by t.TerritoryDescription
order by TotalOrderan desc





--Pada awal tahun 1999 Manejer pemasaran membutuhkan sebuah laporan  pendapatan penjualan  --berdasarkan tahun sebelumnya yang dimana laporan tersebut akan di pakai untuk mengambil--keputusan menyetok lebih banyak produk yang laku terjual. Manajer hanya meminta 10 produk--terlaku serta besar pendapatanselect * from Productsselect * from Employees--videoselect top 10 p.ProductName, sum(od.UnitPrice* od.Quantity) TotalPendapatanfrom Orders ojoin [Order Details] od on od.OrderID = o.OrderIDjoin Products p on p.ProductID = od.ProductIDwhere YEAR(o.OrderDate) = 1998group by p.ProductNameorder by sum(od.Quantity) desc--tampilkan nama perusahaan, nama produk, dan negara perusahaan tersebut yang memiliki produk discontinuedselect * from Productsselect * from Suppliersselect s.CompanyName, p.ProductName, s.Country, p.Discontinuedfrom Products pjoin Suppliers s on p.SupplierID = s.SupplierIDwhere p.Discontinued <> 0--Buatkan laporan reporting menggunakan PIVOT dengan kondisi seperti berikut, --Untuk sumbu X-nya adalah CategoryName, --Untuk sumbu Y-nya adalah Nama Bulan dalam tahun 1997.select * from Categoriesselect * from Ordersselect o.OrderDatefrom Categories cjoin Products p on c.CategoryID = p.CategoryIDjoin [Order Details] od on od.ProductID = p.ProductIDjoin Orders o on o.OrderID = od.OrderIDwhere YEAR(o.OrderDate) = 1997--Karena inflasi, harga produk perlu disesuaikan, produk yang dari UK akan naik harga 25%, produk dari USA 20%, dan dari Australia 10%, --Mohon bikin report yang ada nama company supplier, negara supplier, nama produk, dan harga yang baru, --mengecualikan produk yang sudah di discontinue, mengurutkan makai countryselect * from Productsselect * from Suppliersselect s.CompanyName, s.Country, p.ProductName,sum(p.UnitPrice*25/100)+p.UnitPrice)from Suppliers sjoin Products p on s.SupplierID = p.SupplierID  --video select CompanyName, Country, ProductName, NewUnitPrice from( select s.CompanyName, s.Country, p.ProductName, FORMAT(ROUND((UnitPrice * 1.25),2), 'N', 'en-US') NewUnitPrice, Discontinued from Products p join Suppliers s on s.SupplierID = p.SupplierID where s.Country = 'UK' union all select s.CompanyName, s.Country, p.ProductName, FORMAT(ROUND((UnitPrice * 1.2),2), 'N', 'en-US') NewUnitPrice, Discontinued from Products p join Suppliers s on s.SupplierID = p.SupplierID where s.Country = 'USA' union all  select s.CompanyName, s.Country, p.ProductName, FORMAT(ROUND((UnitPrice * 1.10),2), 'N', 'en-US') NewUnitPrice, Discontinued from Products p join Suppliers s on s.SupplierID = p.SupplierID where s.Country = 'Australia' ) tbl where Discontinued = 0 order by Country--Tampilkan total berapa banyak order pada setiap shipper dimulai dari tahun 1996 - 1998,-- tampilkan menjadi sebuah pivot sumbu x adalah tahun dan sumbu y adalah nama company/ID dengan ketentuan freight lebih besari dari sama dengan 25select * from Ordersselect * from Shippers;with tbl as (select count(o.OrderID) JumlahOrder, s.CompanyName ,o.Freightfrom Orders ojoin Shippers s on s.ShipperID = o.ShipViawhere year(ShippedDate) between 1996 and 1998 and o.Freight >= 25group by s.CompanyName, s.ShipperID, o.ShipVia)pivot(count(JumlahOrder) for CompanyName in ([Speedy Express], [United Package], [Federal Shipping])) pvt--videoselect *from (select s.ShipperID, s.CompanyName, o.OrderID, DATENAME(YEAR, o.ShippedDate) YearShipperfrom Orders ojoin Shippers s on o.ShipVia = s.ShipperIDwhere s.ShipperID in (1,2,3) and CAST(o.Freight as decimal) >= 15) tblPIVOT( count(orderid) for YearShipper in ([1996],[1997],[1998])) pvt--Tampilkan 5 nama supplier yang memiliki id ganjil dimana menyuplai barang yang bukan pecah belah seperti --botol, kaca, toples dengan harga diatas 10 ribu dengan format rupiah indonesia dari yang terbesarselect * from Suppliersselect * from Productsselect top 5 s.SupplierID, s.CompanyName, FORMAT(p.UnitPrice * 15000, 'C' , 'id-ID') PriceInIDRfrom Suppliers sjoin Products p on s.SupplierID = p.SupplierIDwhere s.SupplierID % 2 != 0 and p.UnitPrice >= 10 and (p.QuantityPerUnit not like '%bottles%' or p.QuantityPerUnit not like '%glass%' or p.QuantityPerUnit not like '%jars%')order by p.UnitPrice desc--Buatkan laporan pendapatan (unitOrder*UnitPrice) dengan sumbu x adalah Nama Kategori yang dijumlahkan setiap barisnya dan--sumbu y adalah nama produk beserta total setiap kategorinya.select * from [Order Details]select * from Productsselect * from Categories--videoselect ProductName,ISNULL([Condiments],0) [Condiments],ISNULL([Confections],0) [Confections],ISNULL([Dairy Products],0)[Dairy Products],ISNULL([Grains/Cereals],0)[Grains/Cereals],ISNULL([Meat/Poultry],0)[Meat/Poultry],ISNULL([Produce],0)[Produce],ISNULL([Seafood],0)[Seafood],(ISNULL([Condiments],0) +ISNULL([Confections],0) +ISNULL([Dairy Products],0)+ISNULL([Grains/Cereals],0)+ISNULL([Meat/Poultry],0)+ISNULL([Produce],0)+ISNULL([Seafood],0)) [Total X]from (select (UnitPrice * UnitsOnOrder) Pendapatan, CategoryName, ProductNamefrom Products pjoin Categories c on p.CategoryID = c.CategoryIDjoin Suppliers s on p.SupplierID = s.SupplierID) tblPIVOT(sum(Pendapatan) for CategoryName in ([Condiments], [Confections], [Dairy Products], [Grains/Cereals],[Meat/Poultry], [Produce], [Seafood])) pvt--TAMPILKAN NAMA CUSTOMER, NO TELPON DAN NEGARANYA, YANG DIMANA CUSTOMER TERSEBUT BERASAL DARI NEGARA --JERMAN, MEKSIKO DAN INGGRIS DAN TIDAK MEMPUNYAI NOMOR FAX SERTA URUTKAN CONTACT NAME BERDASARKAN ABJADselect * from Customersselect c.ContactName, c.Phone, c.Countryfrom Customers cwhere c.Country in ('Germany','Mexico', 'UK') and c.Fax is nullorder by c.ContactName/*Perusahaan ingin memberikan laptop pada masing masing karyawan, dimana laptop tersebut memiliki password sebanyak 15 digit yang dibuat dengan aturan sebagai berikut : - Digit pertama merupakan employeeID- Digit kedua & ketiga adalah tanggal lahir karyawan tersebut - Digit ke 4 - 7 adalah tahun masuk karyawan tersebut- Digit ke 8 & 9  adalah 2 digit terakhir dari HomePhone karyawan tersebut- Digit ke 10 - 14 adalah 5 digit TerritoryID asal kota karyawan tersebut- Digit ke 15 adalah RegionID asal kota karyawan tersebutTampilkan nama panjang & password untuk karyawan yang memiliki employeeID 1, 4 & 8 secara berurutan*/select * from Employeesselect * from Territoriesselect CONCAT(e.FirstName, ' ', e.LastName), (e.EmployeeID), DATENAME(DAY, BirthDate) TglLahir, DATENAME(YEAR, HireDate) TahunMasuk, SUBSTRING(HomePhone,13,2), SUBSTRING(t.TerritoryID, 3,2), (t.TerritoryID), (t.RegionID)from Employees ejoin EmployeeTerritories et on e.EmployeeID = et.EmployeeIDjoin Territories t on et.TerritoryID = t.TerritoryIDwhere e.EmployeeID = 1 or e.EmployeeID = 4 or e.EmployeeID = 8--videoselectCONCAT(e.FirstName, ' ', e.LastName) FullName,RIGHT(e.EmployeeID, 1),RIGHT(CONCAT('0', datepart(day, e.birthdate)),2),RIGHT(e.HomePhone, 2),LEFT(et.TerritoryID,5),LEFT(t.RegionID,1)from Employees ejoin EmployeeTerritories et on e.EmployeeID = et.EmployeeIDjoin Territories t on et.TerritoryID = t.TerritoryID